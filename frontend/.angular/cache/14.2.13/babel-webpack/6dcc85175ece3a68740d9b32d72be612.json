{"ast":null,"code":"import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n  constructor() {\n    this._vertical = false;\n    this._inset = false;\n  }\n  /** Whether the divider is vertically aligned. */\n  get vertical() {\n    return this._vertical;\n  }\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /** Whether the divider is an inset divider. */\n  get inset() {\n    return this._inset;\n  }\n  set inset(value) {\n    this._inset = coerceBooleanProperty(value);\n  }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) {\n  return new (t || MatDivider)();\n};\nMatDivider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDivider,\n  selectors: [[\"mat-divider\"]],\n  hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"],\n  hostVars: 7,\n  hostBindings: function MatDivider_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    }\n  },\n  inputs: {\n    vertical: \"vertical\",\n    inset: \"inset\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatDivider_Template(rf, ctx) {},\n  styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatDivider.propDecorators = {\n  vertical: [{\n    type: Input\n  }],\n  inset: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-divider',\n      host: {\n        'role': 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-divider-vertical]': 'vertical',\n        '[class.mat-divider-horizontal]': '!vertical',\n        '[class.mat-divider-inset]': 'inset',\n        'class': 'mat-divider'\n      },\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    vertical: [{\n      type: Input\n    }],\n    inset: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {}\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) {\n  return new (t || MatDividerModule)();\n};\nMatDividerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatDividerModule\n});\nMatDividerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatDivider, MatCommonModule],\n      declarations: [MatDivider]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, {\n    declarations: function () {\n      return [MatDivider];\n    },\n    imports: function () {\n      return [MatCommonModule];\n    },\n    exports: function () {\n      return [MatDivider, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };","map":{"version":3,"names":["Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","coerceBooleanProperty","MatCommonModule","ɵngcc0","MatDivider","constructor","_vertical","_inset","vertical","value","inset","ɵfac","MatDivider_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDivider_HostBindings","rf","ctx","ɵɵattribute","ɵɵclassProp","inputs","decls","vars","template","MatDivider_Template","styles","encapsulation","changeDetection","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","MatDividerModule","MatDividerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/intern-prodoc3/Desktop/Otsuka Young Star/Bootcamp/cafe-management-system/frontend/node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js"],"sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() { return this._vertical; }\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /** Whether the divider is an inset divider. */\n    get inset() { return this._inset; }\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{ selector: 'mat-divider', host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); };\nMatDividerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}