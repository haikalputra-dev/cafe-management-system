{"ast":null,"code":"import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n  constructor() {\n    /** Emits when the state of the accordion changes */\n    this._stateChanges = new Subject();\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n    this._openCloseAllActions = new Subject();\n    /** A readonly id value to use for unique selection coordination. */\n    this.id = `cdk-accordion-${nextId++}`;\n    this._multi = false;\n  }\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  get multi() {\n    return this._multi;\n  }\n  set multi(multi) {\n    this._multi = coerceBooleanProperty(multi);\n  }\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll() {\n    if (this._multi) {\n      this._openCloseAllActions.next(true);\n    }\n  }\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll() {\n    this._openCloseAllActions.next(false);\n  }\n  ngOnChanges(changes) {\n    this._stateChanges.next(changes);\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._openCloseAllActions.complete();\n  }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) {\n  return new (t || CdkAccordion)();\n};\nCdkAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordion,\n  selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n  inputs: {\n    multi: \"multi\"\n  },\n  exportAs: [\"cdkAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CDK_ACCORDION,\n    useExisting: CdkAccordion\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nCdkAccordion.propDecorators = {\n  multi: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion, [cdkAccordion]',\n      exportAs: 'cdkAccordion',\n      providers: [{\n        provide: CDK_ACCORDION,\n        useExisting: CdkAccordion\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    multi: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n  constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n    this.accordion = accordion;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._expansionDispatcher = _expansionDispatcher;\n    /** Subscription to openAll/closeAll events. */\n    this._openCloseAllSubscription = Subscription.EMPTY;\n    /** Event emitted every time the AccordionItem is closed. */\n    this.closed = new EventEmitter();\n    /** Event emitted every time the AccordionItem is opened. */\n    this.opened = new EventEmitter();\n    /** Event emitted when the AccordionItem is destroyed. */\n    this.destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * @docs-private\n     */\n    this.expandedChange = new EventEmitter();\n    /** The unique AccordionItem id. */\n    this.id = `cdk-accordion-child-${nextId$1++}`;\n    this._expanded = false;\n    this._disabled = false;\n    /** Unregister function for _expansionDispatcher. */\n    this._removeUniqueSelectionListener = () => {};\n    this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n      if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n        this.expanded = false;\n      }\n    });\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n  /** Whether the AccordionItem is expanded. */\n  get expanded() {\n    return this._expanded;\n  }\n  set expanded(expanded) {\n    expanded = coerceBooleanProperty(expanded);\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the AccordionItem is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n  /** Toggles the expanded state of the accordion item. */\n  toggle() {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n  /** Sets the expanded state of the accordion item to false. */\n  close() {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n  /** Sets the expanded state of the accordion item to true. */\n  open() {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n  _subscribeToOpenCloseAllActions() {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) {\n  return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher));\n};\nCdkAccordionItem.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordionItem,\n  selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n  inputs: {\n    expanded: \"expanded\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    closed: \"closed\",\n    opened: \"opened\",\n    destroyed: \"destroyed\",\n    expandedChange: \"expandedChange\"\n  },\n  exportAs: [\"cdkAccordionItem\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([\n  // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n  // registering to the same accordion.\n  {\n    provide: CDK_ACCORDION,\n    useValue: ɵ0\n  }])]\n});\nCdkAccordionItem.ctorParameters = () => [{\n  type: CdkAccordion,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [CDK_ACCORDION]\n  }, {\n    type: SkipSelf\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}];\nCdkAccordionItem.propDecorators = {\n  closed: [{\n    type: Output\n  }],\n  opened: [{\n    type: Output\n  }],\n  destroyed: [{\n    type: Output\n  }],\n  expandedChange: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion-item, [cdkAccordionItem]',\n      exportAs: 'cdkAccordionItem',\n      providers: [\n      // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n      // registering to the same accordion.\n      {\n        provide: CDK_ACCORDION,\n        useValue: ɵ0\n      }]\n    }]\n  }], function () {\n    return [{\n      type: CdkAccordion,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CDK_ACCORDION]\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }];\n  }, {\n    closed: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) {\n  return new (t || CdkAccordionModule)();\n};\nCdkAccordionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkAccordionModule\n});\nCdkAccordionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkAccordion, CdkAccordionItem],\n      declarations: [CdkAccordion, CdkAccordionItem]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, {\n    declarations: [CdkAccordion, CdkAccordionItem],\n    exports: [CdkAccordion, CdkAccordionItem]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };","map":{"version":3,"names":["InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","ChangeDetectorRef","Output","NgModule","UniqueSelectionDispatcher","coerceBooleanProperty","Subject","Subscription","ɵngcc0","ɵngcc1","nextId","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","providers","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","CdkAccordionItem_Factory","ɵɵdirectiveInject","outputs","useValue","ctorParameters","decorators","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵangular_material_src_cdk_accordion_accordion_a"],"sources":["C:/Users/intern-prodoc3/Desktop/Otsuka Young Star/Bootcamp/cafe-management-system/frontend/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js"],"sourcesContent":["import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}