{"ast":null,"code":"import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n  }\n}\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._sticky = false;\n      /** Whether the sticky input has changed since it was last checked. */\n      this._hasStickyChanged = false;\n    }\n    /** Whether sticky positioning should be applied. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n  constructor(/** @docs-private */template) {\n    this.template = template;\n  }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) {\n  return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nCdkCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellDef,\n  selectors: [[\"\", \"cdkCellDef\", \"\"]]\n});\nCdkCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n  constructor(/** @docs-private */template) {\n    this.template = template;\n  }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) {\n  return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCellDef,\n  selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]]\n});\nCdkHeaderCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n  constructor(/** @docs-private */template) {\n    this.template = template;\n  }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) {\n  return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCellDef,\n  selectors: [[\"\", \"cdkFooterCellDef\", \"\"]]\n});\nCdkFooterCellDef.ctorParameters = () => [{\n  type: TemplateRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n  constructor(_table) {\n    super();\n    this._table = _table;\n    this._stickyEnd = false;\n  }\n  /** Unique name for this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._setNameInput(name);\n  }\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  get stickyEnd() {\n    return this._stickyEnd;\n  }\n  set stickyEnd(v) {\n    const prevValue = this._stickyEnd;\n    this._stickyEnd = coerceBooleanProperty(v);\n    this._hasStickyChanged = prevValue !== this._stickyEnd;\n  }\n  /**\n   * Overridable method that sets the css classes that will be added to every cell in this\n   * column.\n   * In the future, columnCssClassName will change from type string[] to string and this\n   * will set a single string value.\n   * @docs-private\n   */\n  _updateColumnCssClassName() {\n    this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setNameInput(value) {\n    // If the directive is set without a name (updated programmatically), then this setter will\n    // trigger with an empty string and should not overwrite the programmatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n      this._updateColumnCssClassName();\n    }\n  }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) {\n  return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\nCdkColumnDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkColumnDef,\n  selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n  contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    }\n  },\n  inputs: {\n    sticky: \"sticky\",\n    name: [\"cdkColumnDef\", \"name\"],\n    stickyEnd: \"stickyEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n    useExisting: CdkColumnDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCdkColumnDef.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\nCdkColumnDef.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['cdkColumnDef']\n  }],\n  stickyEnd: [{\n    type: Input,\n    args: ['stickyEnd']\n  }],\n  cell: [{\n    type: ContentChild,\n    args: [CdkCellDef]\n  }],\n  headerCell: [{\n    type: ContentChild,\n    args: [CdkHeaderCellDef]\n  }],\n  footerCell: [{\n    type: ContentChild,\n    args: [CdkFooterCellDef]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkColumnDef]',\n      inputs: ['sticky'],\n      providers: [{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input,\n      args: ['cdkColumnDef']\n    }],\n    stickyEnd: [{\n      type: Input,\n      args: ['stickyEnd']\n    }],\n    cell: [{\n      type: ContentChild,\n      args: [CdkCellDef]\n    }],\n    headerCell: [{\n      type: ContentChild,\n      args: [CdkHeaderCellDef]\n    }],\n    footerCell: [{\n      type: ContentChild,\n      args: [CdkFooterCellDef]\n    }]\n  });\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n    // with destructuring.\n    const classList = elementRef.nativeElement.classList;\n    for (const className of columnDef._columnCssClassName) {\n      classList.add(className);\n    }\n  }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) {\n  return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nCdkHeaderCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCell,\n  selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n  hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCdkHeaderCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-header-cell, th[cdk-header-cell]',\n      host: {\n        'class': 'cdk-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) {\n  return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nCdkFooterCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCell,\n  selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCdkFooterCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n      host: {\n        'class': 'cdk-footer-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n  }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) {\n  return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nCdkCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCell,\n  selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCdkCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-cell, td[cdk-cell]',\n      host: {\n        'class': 'cdk-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n  constructor() {\n    this.tasks = [];\n    this.endTasks = [];\n  }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    this._currentSchedule = null;\n    this._destroyed = new Subject();\n  }\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n  schedule(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.tasks.push(task);\n  }\n  /**\n   * Schedules the specified task to run after other scheduled tasks at the end of the current\n   * VM turn.\n   */\n  scheduleEnd(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.endTasks.push(task);\n  }\n  /** Prevent any further tasks from running. */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  _createScheduleIfNeeded() {\n    if (this._currentSchedule) {\n      return;\n    }\n    this._currentSchedule = new _Schedule();\n    this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n      while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n        const schedule = this._currentSchedule;\n        // Capture new tasks scheduled by the current set of tasks.\n        this._currentSchedule = new _Schedule();\n        for (const task of schedule.tasks) {\n          task();\n        }\n        for (const task of schedule.endTasks) {\n          task();\n        }\n      }\n      this._currentSchedule = null;\n    });\n  }\n  _getScheduleObservable() {\n    // Use onStable when in the context of an ongoing change detection cycle so that we\n    // do not accidentally trigger additional cycles.\n    return this._ngZone.isStable ? from(Promise.resolve(undefined)) : this._ngZone.onStable.pipe(take(1));\n  }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) {\n  return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: _CoalescedStyleScheduler,\n  factory: _CoalescedStyleScheduler.ɵfac\n});\n_CoalescedStyleScheduler.ctorParameters = () => [{\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n  constructor(/** @docs-private */template, _differs) {\n    this.template = template;\n    this._differs = _differs;\n  }\n  ngOnChanges(changes) {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = changes['columns'] && changes['columns'].currentValue || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n      this._columnsDiffer.diff(columns);\n    }\n  }\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n  getColumnsDiff() {\n    return this._columnsDiffer.diff(this.columns);\n  }\n  /** Gets this row def's relevant cell template from the provided column def. */\n  extractCellTemplate(column) {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    }\n    if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) {\n  return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers));\n};\nBaseRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseRowDef,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nBaseRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }];\n  }, null);\n})();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) {\n  return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderRowDef,\n  selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkHeaderRowDef\", \"columns\"],\n    sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\nCdkHeaderRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderRowDef]',\n      inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) {\n  return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterRowDef,\n  selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkFooterRowDef\", \"columns\"],\n    sticky: [\"cdkFooterRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\nCdkFooterRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterRowDef]',\n      inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  constructor(template, _differs, _table) {\n    super(template, _differs);\n    this._table = _table;\n  }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) {\n  return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\nCdkRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkRowDef,\n  selectors: [[\"\", \"cdkRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkRowDefColumns\", \"columns\"],\n    when: [\"cdkRowDefWhen\", \"when\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCdkRowDef.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: IterableDiffers\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [CDK_TABLE]\n  }, {\n    type: Optional\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkRowDef]',\n      inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n  constructor(_viewContainer) {\n    this._viewContainer = _viewContainer;\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) {\n  return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\nCdkCellOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellOutlet,\n  selectors: [[\"\", \"cdkCellOutlet\", \"\"]]\n});\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) {\n  return new (t || CdkHeaderRow)();\n};\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkHeaderRow,\n  selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkHeaderRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-header-row, tr[cdk-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) {\n  return new (t || CdkFooterRow)();\n};\nCdkFooterRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkFooterRow,\n  selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkFooterRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-footer-row, tr[cdk-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-footer-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {}\nCdkRow.ɵfac = function CdkRow_Factory(t) {\n  return new (t || CdkRow)();\n};\nCdkRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkRow,\n  selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-row, tr[cdk-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) {\n  return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nCdkNoDataRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkNoDataRow,\n  selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]]\n});\nCdkNoDataRow.ctorParameters = () => [{\n  type: TemplateRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkNoDataRow]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction,\n  /**\n   * @deprecated `_coalescedStyleScheduler` parameter to become required.\n   * @breaking-change 11.0.0\n   */\n  _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._cachedCellWidths = [];\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows, stickyDirections) {\n    const elementsToClear = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n      elementsToClear.push(row);\n      for (let i = 0; i < row.children.length; i++) {\n        elementsToClear.push(row.children[i]);\n      }\n    }\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      for (const element of elementsToClear) {\n        this._removeStickyStyle(element, stickyDirections);\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   */\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: []\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: []\n        });\n      }\n      return;\n    }\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n    const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n    const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n    const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n    const lastStickyStart = stickyStartStates.lastIndexOf(true);\n    const firstStickyEnd = stickyEndStates.indexOf(true);\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      const isRtl = this.direction === 'rtl';\n      const start = isRtl ? 'right' : 'left';\n      const end = isRtl ? 'left' : 'right';\n      for (const row of rows) {\n        for (let i = 0; i < numCells; i++) {\n          const cell = row.children[i];\n          if (stickyStartStates[i]) {\n            this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n          }\n          if (stickyEndStates[i]) {\n            this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n          }\n        }\n      }\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n        });\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n    // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n    // sticky states need to be reversed as well.\n    const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n    const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n    // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n    const stickyOffsets = [];\n    const stickyCellHeights = [];\n    const elementsToStick = [];\n    for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n      stickyOffsets[rowIndex] = stickyOffset;\n      if (!states[rowIndex]) {\n        continue;\n      }\n      const row = rows[rowIndex];\n      elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n      const height = row.getBoundingClientRect().height;\n      stickyOffset += height;\n      stickyCellHeights[rowIndex] = height;\n    }\n    const borderedRowIndex = states.lastIndexOf(true);\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      var _a, _b;\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n        const offset = stickyOffsets[rowIndex];\n        const isBorderedRowIndex = rowIndex === borderedRowIndex;\n        for (const element of elementsToStick[rowIndex]) {\n          this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n        }\n      }\n      if (position === 'top') {\n        (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n          sizes: stickyCellHeights,\n          elements: elementsToStick\n        });\n      } else {\n        (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n          sizes: stickyCellHeights,\n          elements: elementsToStick\n        });\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n    const tfoot = tableElement.querySelector('tfoot');\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      if (stickyStates.some(state => !state)) {\n        this._removeStickyStyle(tfoot, ['bottom']);\n      } else {\n        this._addStickyStyle(tfoot, 'bottom', 0, false);\n      }\n    });\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element, stickyDirections) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    }\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n    const cellWidths = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell = firstRowCells[i];\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Schedules styles to be applied when the style scheduler deems appropriate.\n   * @breaking-change 11.0.0 This method can be removed in favor of calling\n   * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n   */\n  _scheduleStyleChanges(changes) {\n    if (this._coalescedStyleScheduler) {\n      this._coalescedStyleScheduler.schedule(changes);\n    } else {\n      changes();\n    }\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) {\n  return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DataRowOutlet,\n  selectors: [[\"\", \"rowOutlet\", \"\"]]\n});\nDataRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[rowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) {\n  return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: HeaderRowOutlet,\n  selectors: [[\"\", \"headerRowOutlet\", \"\"]]\n});\nHeaderRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[headerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) {\n  return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nFooterRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: FooterRowOutlet,\n  selectors: [[\"\", \"footerRowOutlet\", \"\"]]\n});\nFooterRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[footerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n  constructor(viewContainer, elementRef) {\n    this.viewContainer = viewContainer;\n    this.elementRef = elementRef;\n  }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) {\n  return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NoDataRowOutlet,\n  selectors: [[\"\", \"noDataRowOutlet\", \"\"]]\n});\nNoDataRowOutlet.ctorParameters = () => [{\n  type: ViewContainerRef\n}, {\n  type: ElementRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[noDataRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE =\n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n  constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform,\n  /**\n   * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n   *    parameters to become required.\n   * @breaking-change 11.0.0\n   */\n  _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener,\n  // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n  // this property will never be null.\n  // tslint:disable-next-line: lightweight-tokens\n  _viewportRuler) {\n    this._differs = _differs;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._platform = _platform;\n    this._viewRepeater = _viewRepeater;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._stickyPositioningListener = _stickyPositioningListener;\n    this._viewportRuler = _viewportRuler;\n    /** Subject that emits when the component has been destroyed. */\n    this._onDestroy = new Subject();\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n    this._columnDefsByName = new Map();\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n    this._customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n    this._customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n    this._customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n    this._customFooterRowDefs = new Set();\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    this._headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    this._footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n    this._stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n    this._forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n    this._cachedRenderRowsMap = new Map();\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     */\n    this.stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n    this.needsPositionStickyOnElement = true;\n    /** Whether the no data row is currently showing anything. */\n    this._isShowingNoDataRow = false;\n    this._multiTemplateDataRows = false;\n    this._fixedLayout = false;\n    // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n    this.viewChange = new BehaviorSubject({\n      start: 0,\n      end: Number.MAX_VALUE\n    });\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'grid');\n    }\n    this._document = _document;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  get trackBy() {\n    return this._trackByFn;\n  }\n  set trackBy(fn) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n  get dataSource() {\n    return this._dataSource;\n  }\n  set dataSource(dataSource) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n  get multiTemplateDataRows() {\n    return this._multiTemplateDataRows;\n  }\n  set multiTemplateDataRows(v) {\n    this._multiTemplateDataRows = coerceBooleanProperty(v);\n    // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n    // this setter will be invoked before the row outlet has been defined hence the null check.\n    if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n   * and optimize rendering sticky styles for native tables. No-op for flex tables.\n   */\n  get fixedLayout() {\n    return this._fixedLayout;\n  }\n  set fixedLayout(v) {\n    this._fixedLayout = coerceBooleanProperty(v);\n    // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n    this._forceRecalculateCellWidths = true;\n    this._stickyColumnStylesNeedReset = true;\n  }\n  ngOnInit() {\n    this._setupStickyStyler();\n    if (this._isNativeHtmlTable) {\n      this._applyNativeTableSections();\n    }\n    // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n    this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n    // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n    // refresh its cache of cell widths the next time sticky styles are updated.\n    // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n    if (this._viewportRuler) {\n      this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n        this._forceRecalculateCellWidths = true;\n      });\n    }\n  }\n  ngAfterContentChecked() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n    this._cacheColumnDefs();\n    // Make sure that the user has at least added header, footer, or data row def.\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingRowDefsError();\n    }\n    // Render updates if the list of columns have been changed for the header, row, or footer defs.\n    const columnsChanged = this._renderUpdatedColumns();\n    const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n    // Ensure sticky column styles are reset if set to `true` elsewhere.\n    this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n    this._forceRecalculateCellWidths = rowDefsChanged;\n    // If the header row definition has been changed, trigger a render to the header row.\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n      this._headerRowDefChanged = false;\n    }\n    // If the footer row definition has been changed, trigger a render to the footer row.\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n      this._footerRowDefChanged = false;\n    }\n    // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    } else if (this._stickyColumnStylesNeedReset) {\n      // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n      // called when it row data arrives. Otherwise, we need to call it proactively.\n      this.updateStickyColumnStyles();\n    }\n    this._checkStickyStates();\n  }\n  ngOnDestroy() {\n    this._rowOutlet.viewContainer.clear();\n    this._noDataRowOutlet.viewContainer.clear();\n    this._headerRowOutlet.viewContainer.clear();\n    this._footerRowOutlet.viewContainer.clear();\n    this._cachedRenderRowsMap.clear();\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n  }\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n    const changes = this._dataDiffer.diff(this._renderRows);\n    if (!changes) {\n      this._updateNoDataRow();\n      return;\n    }\n    const viewContainer = this._rowOutlet.viewContainer;\n    // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n    // `else` clause once `_viewRepeater` is turned into a required parameter.\n    if (this._viewRepeater) {\n      this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n        if (change.operation === 1 /* INSERTED */ && change.context) {\n          this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n        }\n      });\n    } else {\n      changes.forEachOperation((record, prevIndex, currentIndex) => {\n        if (record.previousIndex == null) {\n          const renderRow = record.item;\n          const rowDef = renderRow.rowDef;\n          const context = {\n            $implicit: renderRow.data\n          };\n          this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n        } else if (currentIndex == null) {\n          viewContainer.remove(prevIndex);\n        } else {\n          const view = viewContainer.get(prevIndex);\n          viewContainer.move(view, currentIndex);\n        }\n      });\n    }\n    // Update the meta context of a row's context data (index, count, first, last, ...)\n    this._updateRowIndexContext();\n    // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n    changes.forEachIdentityChange(record => {\n      const rowView = viewContainer.get(record.currentIndex);\n      rowView.context.$implicit = record.item.data;\n    });\n    this._updateNoDataRow();\n    this.updateStickyColumnStyles();\n  }\n  /** Adds a column definition that was not included as part of the content children. */\n  addColumnDef(columnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n  /** Removes a column definition that was not included as part of the content children. */\n  removeColumnDef(columnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n  /** Adds a row definition that was not included as part of the content children. */\n  addRowDef(rowDef) {\n    this._customRowDefs.add(rowDef);\n  }\n  /** Removes a row definition that was not included as part of the content children. */\n  removeRowDef(rowDef) {\n    this._customRowDefs.delete(rowDef);\n  }\n  /** Adds a header row definition that was not included as part of the content children. */\n  addHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Removes a header row definition that was not included as part of the content children. */\n  removeHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Adds a footer row definition that was not included as part of the content children. */\n  addFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Removes a footer row definition that was not included as part of the content children. */\n  removeFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Sets a no data row definition that was not included as a part of the content children. */\n  setNoDataRow(noDataRow) {\n    this._customNoDataRow = noDataRow;\n  }\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyHeaderRowStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const tableElement = this._elementRef.nativeElement;\n    // Hide the thead element if there are no header rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    const thead = tableElement.querySelector('thead');\n    if (thead) {\n      thead.style.display = headerRows.length ? '' : 'none';\n    }\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyFooterRowStyles() {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    const tableElement = this._elementRef.nativeElement;\n    // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    const tfoot = tableElement.querySelector('tfoot');\n    if (tfoot) {\n      tfoot.style.display = footerRows.length ? '' : 'none';\n    }\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n    // In a table using a fixed layout, row content won't affect column width, so sticky styles\n    // don't need to be cleared unless either the sticky column config changes or one of the row\n    // defs change.\n    if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n      // Clear the left and right positioning from all columns in the table across all rows since\n      // sticky columns span across all table sections (header, data, footer)\n      this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n      this._stickyColumnStylesNeedReset = false;\n    }\n    // Update the sticky styles for each header row depending on the def's sticky state\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    });\n    // Update the sticky styles for each data row depending on its def's sticky state\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows = [];\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n      this._addStickyColumnStyles(rows, rowDef);\n    });\n    // Update the sticky styles for each footer row depending on the def's sticky state\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    });\n    // Reset the dirty state of the sticky input change since it has been used.\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n  _getAllRenderRows() {\n    const renderRows = [];\n    // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map();\n    // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n        const cache = this._cachedRenderRowsMap.get(renderRow.data);\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef).push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n        renderRows.push(renderRow);\n      }\n    }\n    return renderRows;\n  }\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n  _getRenderRowsForData(data, dataIndex, cache) {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift();\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {\n          data,\n          rowDef,\n          dataIndex\n        };\n      }\n    });\n  }\n  /** Update the map containing the content's column definitions. */\n  _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n    const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n  /** Update the list of all available row definitions that can be used. */\n  _cacheRowDefs() {\n    this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n    this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n    this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n    // After all row definitions are determined, find the row definition to be considered default.\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n  _renderUpdatedColumns() {\n    const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n    // Force re-render data rows if the list of column definitions have changed.\n    const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n    if (dataColumnsChanged) {\n      this._forceRenderDataRows();\n    }\n    // Force re-render header/footer rows if the list of column definitions have changed.\n    const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n    if (headerColumnsChanged) {\n      this._forceRenderHeaderRows();\n    }\n    const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n    if (footerColumnsChanged) {\n      this._forceRenderFooterRows();\n    }\n    return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n  }\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n  _switchDataSource(dataSource) {\n    this._data = [];\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n    // Stop listening for data from the previous data source.\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n      this._rowOutlet.viewContainer.clear();\n    }\n    this._dataSource = dataSource;\n  }\n  /** Set up a subscription for the data provided by the data source. */\n  _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) {\n      return;\n    }\n    let dataStream;\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect(this);\n    } else if (isObservable(this.dataSource)) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = of(this.dataSource);\n    }\n    if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableUnknownDataSourceError();\n    }\n    this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n      this._data = data || [];\n      this.renderRows();\n    });\n  }\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n  _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n    this.updateStickyHeaderRowStyles();\n  }\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n  _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n    this.updateStickyFooterRowStyles();\n  }\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n  _addStickyColumnStyles(rows, rowDef) {\n    const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n      const columnDef = this._columnDefsByName.get(columnName);\n      if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnName);\n      }\n      return columnDef;\n    });\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n  }\n  /** Gets the list of rows that have been rendered in the row outlet. */\n  _getRenderedRows(rowOutlet) {\n    const renderedRows = [];\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = rowOutlet.viewContainer.get(i);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n    return renderedRows;\n  }\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n  _getRowDefs(data, dataIndex) {\n    if (this._rowDefs.length == 1) {\n      return [this._rowDefs[0]];\n    }\n    let rowDefs = [];\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n    if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n    return rowDefs;\n  }\n  _getEmbeddedViewArgs(renderRow, index) {\n    const rowDef = renderRow.rowDef;\n    const context = {\n      $implicit: renderRow.data\n    };\n    return {\n      templateRef: rowDef.template,\n      context,\n      index\n    };\n  }\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n  _renderRow(outlet, rowDef, index, context = {}) {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n    this._renderCellTemplateForItem(rowDef, context);\n    return view;\n  }\n  _renderCellTemplateForItem(rowDef, context) {\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n  _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex);\n      const context = viewRef.context;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n  /** Gets the column definitions for the provided row def. */\n  _getCellTemplates(rowDef) {\n    if (!rowDef || !rowDef.columns) {\n      return [];\n    }\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n      if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnId);\n      }\n      return rowDef.extractCellTemplate(column);\n    });\n  }\n  /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n  _applyNativeTableSections() {\n    const documentFragment = this._document.createDocumentFragment();\n    const sections = [{\n      tag: 'thead',\n      outlets: [this._headerRowOutlet]\n    }, {\n      tag: 'tbody',\n      outlets: [this._rowOutlet, this._noDataRowOutlet]\n    }, {\n      tag: 'tfoot',\n      outlets: [this._footerRowOutlet]\n    }];\n    for (const section of sections) {\n      const element = this._document.createElement(section.tag);\n      element.setAttribute('role', 'rowgroup');\n      for (const outlet of section.outlets) {\n        element.appendChild(outlet.elementRef.nativeElement);\n      }\n      documentFragment.appendChild(element);\n    }\n    // Use a DocumentFragment so we don't hit the DOM on each iteration.\n    this._elementRef.nativeElement.appendChild(documentFragment);\n  }\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n  _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n    this._rowOutlet.viewContainer.clear();\n    this.renderRows();\n  }\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n  _checkStickyStates() {\n    const stickyCheckReducer = (acc, d) => {\n      return acc || d.hasStickyChanged();\n    };\n    // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this._stickyColumnStylesNeedReset = true;\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n  _setupStickyStyler() {\n    const direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n    (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n      this._stickyStyler.direction = value;\n      this.updateStickyColumnStyles();\n    });\n  }\n  /** Filters definitions that belong to this table from a QueryList. */\n  _getOwnDefs(items) {\n    return items.filter(item => !item._table || item._table === this);\n  }\n  /** Creates or removes the no data row, depending on whether any data is being shown. */\n  _updateNoDataRow() {\n    const noDataRow = this._customNoDataRow || this._noDataRow;\n    if (noDataRow) {\n      const shouldShow = this._rowOutlet.viewContainer.length === 0;\n      if (shouldShow !== this._isShowingNoDataRow) {\n        const container = this._noDataRowOutlet.viewContainer;\n        shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n        this._isShowingNoDataRow = shouldShow;\n      }\n    }\n  }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) {\n  return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8));\n};\nCdkTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTable,\n  selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n  contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    }\n  },\n  viewQuery: function CdkTable_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    }\n  },\n  hostAttrs: [1, \"cdk-table\"],\n  hostVars: 2,\n  hostBindings: function CdkTable_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    }\n  },\n  inputs: {\n    trackBy: \"trackBy\",\n    dataSource: \"dataSource\",\n    multiTemplateDataRows: \"multiTemplateDataRows\",\n    fixedLayout: \"fixedLayout\"\n  },\n  exportAs: [\"cdkTable\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CDK_TABLE,\n    useExisting: CdkTable\n  }, {\n    provide: _VIEW_REPEATER_STRATEGY,\n    useClass: _DisposeViewRepeaterStrategy\n  }, {\n    provide: _COALESCED_STYLE_SCHEDULER,\n    useClass: _CoalescedStyleScheduler\n  },\n  // Prevent nested tables from seeing this table's StickyPositioningListener.\n  {\n    provide: STICKY_POSITIONING_LISTENER,\n    useValue: null\n  }])],\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 0,\n  consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n  template: function CdkTable_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n      ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    }\n  },\n  dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet],\n  styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],\n  encapsulation: 2\n});\nCdkTable.ctorParameters = () => [{\n  type: IterableDiffers\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ElementRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['role']\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [_VIEW_REPEATER_STRATEGY]\n  }]\n}, {\n  type: _CoalescedStyleScheduler,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [_COALESCED_STYLE_SCHEDULER]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [STICKY_POSITIONING_LISTENER]\n  }]\n}, {\n  type: ViewportRuler,\n  decorators: [{\n    type: Optional\n  }]\n}];\nCdkTable.propDecorators = {\n  trackBy: [{\n    type: Input\n  }],\n  dataSource: [{\n    type: Input\n  }],\n  multiTemplateDataRows: [{\n    type: Input\n  }],\n  fixedLayout: [{\n    type: Input\n  }],\n  _rowOutlet: [{\n    type: ViewChild,\n    args: [DataRowOutlet, {\n      static: true\n    }]\n  }],\n  _headerRowOutlet: [{\n    type: ViewChild,\n    args: [HeaderRowOutlet, {\n      static: true\n    }]\n  }],\n  _footerRowOutlet: [{\n    type: ViewChild,\n    args: [FooterRowOutlet, {\n      static: true\n    }]\n  }],\n  _noDataRowOutlet: [{\n    type: ViewChild,\n    args: [NoDataRowOutlet, {\n      static: true\n    }]\n  }],\n  _contentColumnDefs: [{\n    type: ContentChildren,\n    args: [CdkColumnDef, {\n      descendants: true\n    }]\n  }],\n  _contentRowDefs: [{\n    type: ContentChildren,\n    args: [CdkRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentHeaderRowDefs: [{\n    type: ContentChildren,\n    args: [CdkHeaderRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentFooterRowDefs: [{\n    type: ContentChildren,\n    args: [CdkFooterRowDef, {\n      descendants: true\n    }]\n  }],\n  _noDataRow: [{\n    type: ContentChild,\n    args: [CdkNoDataRow]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-table, table[cdk-table]',\n      exportAs: 'cdkTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'cdk-table',\n        '[class.cdk-table-fixed-layout]': 'fixedLayout'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_VIEW_REPEATER_STRATEGY]\n      }]\n    }, {\n      type: _CoalescedStyleScheduler,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_COALESCED_STYLE_SCHEDULER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [STICKY_POSITIONING_LISTENER]\n      }]\n    }, {\n      type: ɵngcc3.ViewportRuler,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    trackBy: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    multiTemplateDataRows: [{\n      type: Input\n    }],\n    fixedLayout: [{\n      type: Input\n    }],\n    _rowOutlet: [{\n      type: ViewChild,\n      args: [DataRowOutlet, {\n        static: true\n      }]\n    }],\n    _headerRowOutlet: [{\n      type: ViewChild,\n      args: [HeaderRowOutlet, {\n        static: true\n      }]\n    }],\n    _footerRowOutlet: [{\n      type: ViewChild,\n      args: [FooterRowOutlet, {\n        static: true\n      }]\n    }],\n    _noDataRowOutlet: [{\n      type: ViewChild,\n      args: [NoDataRowOutlet, {\n        static: true\n      }]\n    }],\n    _contentColumnDefs: [{\n      type: ContentChildren,\n      args: [CdkColumnDef, {\n        descendants: true\n      }]\n    }],\n    _contentRowDefs: [{\n      type: ContentChildren,\n      args: [CdkRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentHeaderRowDefs: [{\n      type: ContentChildren,\n      args: [CdkHeaderRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentFooterRowDefs: [{\n      type: ContentChildren,\n      args: [CdkFooterRowDef, {\n        descendants: true\n      }]\n    }],\n    _noDataRow: [{\n      type: ContentChild,\n      args: [CdkNoDataRow]\n    }]\n  });\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n  constructor(\n  // `CdkTextColumn` is always requiring a table, but we just assert it manually\n  // for better error reporting.\n  // tslint:disable-next-line: lightweight-tokens\n  _table, _options) {\n    this._table = _table;\n    this._options = _options;\n    /** Alignment of the cell values. */\n    this.justify = 'start';\n    this._options = _options || {};\n  }\n  /** Column name that should be used to reference this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._name = name;\n    // With Ivy, inputs can be initialized before static query results are\n    // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n    this._syncColumnDefName();\n  }\n  ngOnInit() {\n    this._syncColumnDefName();\n    if (this.headerText === undefined) {\n      this.headerText = this._createDefaultHeaderText();\n    }\n    if (!this.dataAccessor) {\n      this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n    }\n    if (this._table) {\n      // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n      // since the columnDef will not pick up its content by the time the table finishes checking\n      // its content and initializing the rows.\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getTableTextColumnMissingParentTableError();\n    }\n  }\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n  /**\n   * Creates a default header text. Use the options' header text transformation function if one\n   * has been provided. Otherwise simply capitalize the column name.\n   */\n  _createDefaultHeaderText() {\n    const name = this.name;\n    if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableTextColumnMissingNameError();\n    }\n    if (this._options && this._options.defaultHeaderTextTransform) {\n      return this._options.defaultHeaderTextTransform(name);\n    }\n    return name[0].toUpperCase() + name.slice(1);\n  }\n  /** Synchronizes the column definition name with the text column name. */\n  _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) {\n  return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8));\n};\nCdkTextColumn.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTextColumn,\n  selectors: [[\"cdk-text-column\"]],\n  viewQuery: function CdkTextColumn_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    }\n  },\n  inputs: {\n    justify: \"justify\",\n    name: \"name\",\n    headerText: \"headerText\",\n    dataAccessor: \"dataAccessor\"\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n  template: function CdkTextColumn_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n      ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n      ɵngcc0.ɵɵelementContainerEnd();\n    }\n  },\n  dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell],\n  encapsulation: 2\n});\nCdkTextColumn.ctorParameters = () => [{\n  type: CdkTable,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TEXT_COLUMN_OPTIONS]\n  }]\n}];\nCdkTextColumn.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  headerText: [{\n    type: Input\n  }],\n  dataAccessor: [{\n    type: Input\n  }],\n  justify: [{\n    type: Input\n  }],\n  columnDef: [{\n    type: ViewChild,\n    args: [CdkColumnDef, {\n      static: true\n    }]\n  }],\n  cell: [{\n    type: ViewChild,\n    args: [CdkCellDef, {\n      static: true\n    }]\n  }],\n  headerCell: [{\n    type: ViewChild,\n    args: [CdkHeaderCellDef, {\n      static: true\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-text-column',\n      template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default\n    }]\n  }], function () {\n    return [{\n      type: CdkTable,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TEXT_COLUMN_OPTIONS]\n      }]\n    }];\n  }, {\n    justify: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    headerText: [{\n      type: Input\n    }],\n    dataAccessor: [{\n      type: Input\n    }],\n    columnDef: [{\n      type: ViewChild,\n      args: [CdkColumnDef, {\n        static: true\n      }]\n    }],\n    cell: [{\n      type: ViewChild,\n      args: [CdkCellDef, {\n        static: true\n      }]\n    }],\n    headerCell: [{\n      type: ViewChild,\n      args: [CdkHeaderCellDef, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];\nclass CdkTableModule {}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) {\n  return new (t || CdkTableModule)();\n};\nCdkTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkTableModule\n});\nCdkTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [ScrollingModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n    type: NgModule,\n    args: [{\n      exports: EXPORTED_DECLARATIONS,\n      declarations: EXPORTED_DECLARATIONS,\n      imports: [ScrollingModule]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, {\n    declarations: function () {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];\n    },\n    imports: function () {\n      return [ScrollingModule];\n    },\n    exports: function () {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };","map":{"version":3,"names":["Directionality","coerceBooleanProperty","isDataSource","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","DataSource","Platform","ViewportRuler","ScrollingModule","DOCUMENT","InjectionToken","Directive","TemplateRef","Inject","Optional","Input","ContentChild","ElementRef","Injectable","NgZone","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","ChangeDetectorRef","Attribute","SkipSelf","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","undefined","decorators","propDecorators","providers","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","exportAs","useClass","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","String","static","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/intern-prodoc3/Desktop/Otsuka Young Star/Bootcamp/cafe-management-system/frontend/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            stickyOffsets[rowIndex] = stickyOffset;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n    /**\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n     *    parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n    // this property will never be null.\n    // tslint:disable-next-line: lightweight-tokens\n    _viewportRuler) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._viewportRuler = _viewportRuler;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n        // refresh its cache of cell widths the next time sticky styles are updated.\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        if (this._viewportRuler) {\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n                this._forceRecalculateCellWidths = true;\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\n        if (this._viewRepeater) {\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                if (change.operation === 1 /* INSERTED */ && change.context) {\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                }\n            });\n        }\n        else {\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\n                if (record.previousIndex == null) {\n                    const renderRow = record.item;\n                    const rowDef = renderRow.rowDef;\n                    const context = { $implicit: renderRow.data };\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                }\n                else if (currentIndex == null) {\n                    viewContainer.remove(prevIndex);\n                }\n                else {\n                    const view = viewContainer.get(prevIndex);\n                    viewContainer.move(view, currentIndex);\n                }\n            });\n        }\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    } }, dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}