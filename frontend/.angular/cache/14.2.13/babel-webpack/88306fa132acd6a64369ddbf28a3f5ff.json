{"ast":null,"code":"import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [\n  // We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatDrawerContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatDrawerContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatDrawerContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._container = _container;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /** Whether the drawer is initialized. Used for disabling the initial animation. */\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._opened = false;\n    /** Emits whenever the drawer has started animating. */\n    this._animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    this._animationEnd = new Subject();\n    /** Current state of the sidenav animation. */\n    // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n    // metadata is not inherited by child classes, instead the host binding data is defined in a way\n    // that can be inherited.\n    // tslint:disable:no-host-decorator-in-concrete\n    this._animationState = 'void';\n    /** Event emitted when the drawer open state is changed. */\n    this.openedChange =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(/* isAsync */true);\n    /** Event emitted when the drawer has been opened. */\n    this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the drawer has started opening. */\n    this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the drawer has started closing. */\n    this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    this._modeChanged = new Subject();\n    this.openedChange.subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus();\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n    });\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      const {\n        fromState,\n        toState\n      } = event;\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value != this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n    // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n    // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n    return value == null ? this.mode !== 'side' : value;\n  }\n  set autoFocus(value) {\n    this._autoFocus = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this.autoFocus || !this._focusTrap) {\n      return;\n    }\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n    // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    var _a;\n    const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._updateFocusTrapState();\n  }\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurring of the active element.\n    return this._setOpen(/* isOpen */false, /* restoreFocus */true);\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    return this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), openedVia);\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n   *   origin will be used later when focus is restored on drawer close.\n   */\n  _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n    this._opened = isOpen;\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n      if (restoreFocus) {\n        this._restoreFocus();\n      }\n    }\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // The focus trap is only enabled when the drawer is open in any mode other than side.\n      this._focusTrap.enabled = this.opened && this.mode !== 'side';\n    }\n  }\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  _animationStartListener(event) {\n    this._animationStarted.next(event);\n  }\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  _animationDoneListener(event) {\n    this._animationEnd.next(event);\n  }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n};\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 12,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStartListener($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationDoneListener($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\",\n    onPositionChanged: \"positionChanged\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatDrawer.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusTrapFactory\n}, {\n  type: FocusMonitor\n}, {\n  type: Platform\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DRAWER_CONTAINER]\n  }]\n}];\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  opened: [{\n    type: Input\n  }],\n  _animationState: [{\n    type: HostBinding,\n    args: ['@transform']\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  _animationStartListener: [{\n    type: HostListener,\n    args: ['@transform.start', ['$event']]\n  }],\n  _animationDoneListener: [{\n    type: HostListener,\n    args: ['@transform.done', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DRAWER_CONTAINER]\n      }]\n    }];\n  }, {\n    _animationState: [{\n      type: HostBinding,\n      args: ['@transform']\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n      type: HostListener,\n      args: ['@transform.start', ['$event']]\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n      type: HostListener,\n      args: ['@transform.done', ['$event']]\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Drawers that belong to this container. */\n    this._drawers = new QueryList();\n    /** Event emitted when the drawer backdrop is clicked. */\n    this.backdropClick = new EventEmitter();\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject();\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    this._autosize = defaultAutosize;\n  }\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n  }\n  _canHaveBackdrop(drawer) {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatDrawerContainer\n  }])],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatDrawerContainer.ctorParameters = () => [{\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatDrawerContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatDrawer, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatSidenavContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(() => MatSidenavContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatSidenavContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n}\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 17,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {}\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatSidenavContainer\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatSidenav, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function () {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule];\n    },\n    exports: function () {\n      return [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };","map":{"version":3,"names":["Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ViewportRuler","CdkScrollableModule","DOCUMENT","CommonModule","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Inject","forwardRef","ElementRef","NgZone","EventEmitter","Optional","Input","HostBinding","Output","HostListener","QueryList","ContentChildren","ContentChild","ViewChild","NgModule","MatCommonModule","FocusTrapFactory","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","Subject","fromEvent","merge","filter","map","mapTo","takeUntil","distinctUntilChanged","take","startWith","debounceTime","trigger","state","style","transition","animate","ANIMATION_MODULE_TYPE","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","constructor","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","pipe","o","openedStart","e","fromState","toState","indexOf","undefined","_closedStream","closedStart","_destroyed","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","runOutsideAngular","nativeElement","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","emit","value","mode","_updateFocusTrapState","next","autoFocus","_autoFocus","toggle","_focusTrap","focusInitialElementWhenReady","then","hasMovedFocus","focus","focusVia","_openedVia","blur","_a","activeEl","contains","create","ngAfterContentChecked","isBrowser","ngOnDestroy","destroy","complete","open","openedVia","_closeViaBackdropClick","_setOpen","isOpen","restoreFocus","Promise","resolve","_getWidth","offsetWidth","enabled","_animationStartListener","_animationDoneListener","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","exportAs","consts","MatDrawer_Template","dependencies","data","animation","propDecorators","animations","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","hasBackdrop","_backdropOverride","scrollable","_userContent","_content","_allDrawers","changes","drawer","reset","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","width","_right","ngDoCheck","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","isAdd","className","remove","_closeModalDrawersViaBackdrop","_canHaveBackdrop","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","ɵɵProvidersFeature","provide","useExisting","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","NgIf","styles","String","descendants","providers","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵangular_material_src_material_sidenav_sidenav_a"],"sources":["C:/Users/intern-prodoc3/Desktop/Otsuka Young Star/Bootcamp/cafe-management-system/frontend/node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js"],"sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, dependencies: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, dependencies: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule, CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}